chi_squared_test <- chisq.test(observed_counts, p = expected_counts)
# Check if chi-square test rejects at 5% level
R[i] <- as.integer(chi_squared_test$p.value <= 0.05)
}
return(mean(R))
}
k = 6
t = seq(0.01, 1/2*k, 1/2*k/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100, 1000)
}
chisq.power(k, 1/120, 100, 1000)
chisq.power(k, 1/120, 100, 1000)
table(obs)
obs
tabulate(obs)
as.table(table(obs))
table(obs)$counts
?table
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = table(sample(pt_data, n, replace=TRUE))
exp = rep(n/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
k = 6
t = seq(0.01, 1/2*k, 1/2*k/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100, 1000)
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = table(sample(pt_data, n, replace=TRUE))
exp = rep(1/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
chisq.power <- function(k, t, n, B = 2000) {
R <- numeric(length = B)
for (i in 1:B) {
# Simulate data from Pt
pt_values <- c(rep(1/(2*k) + t, k), rep(1/(2*k) - t, k))
simulated_data <- sample(pt_values, n, replace = TRUE)
# Create a contingency table
observed_counts <- table(simulated_data)
expected_counts <- rep(n/(2*k), 2*k)
# Perform chi-square test
chi_squared_test <- chisq.test(observed_counts, p = expected_counts)
# Check if chi-square test rejects at 5% level
R[i] <- as.integer(chi_squared_test$p.value <= 0.05)
}
return(mean(R))
}
# Fix k
k <- 6
# Define range of t values
t_values <- seq(0, 1/(2*k) - 0.001, length.out = 100)
# Calculate power for each t value
power_values <- sapply(t_values, function(t) chisq.power(k, t, n = 100))
x
observed_counts
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = table(sample(pt_data, n, replace=TRUE))
exp = rep(1/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
k = 6
t = seq(0.01, 1/2*k, 1/2*k/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = table(sample(pt_data, n, replace=TRUE))
exp = rep(1/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
chisq.power(6, 0.01, 100)
chisq.power(6, 0.01, 100)
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = rep(1/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
obs
table(obs)
table(obs)[]
table(obs) []
unname(table(obs))
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = unname(table(sample(pt_data, n, replace=TRUE)))
exp = rep(1/two_k, two_k)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
print(obs)
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = unname(table(sample(pt_data, n, replace=TRUE)))
exp = rep(1/two_k, two_k)
print(obs)
print(exp)
X = chisq.test(obs, p=exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = unname(table(sample(pt_data, n, replace=TRUE)))
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(density(powers))
?seq
options(warn=-1)
k = 6
t = seq(0, 1/(2*k), length.out = 20)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
options(warn=-1)
k = 6
t = seq(0, 1/(2*k), length.out = 20)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
k = 6
t = seq(0, 1/(2*k), length.out = 20)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
seq(0, 1/(2*k), length.out = 20)
length(t)
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
options(warn=-1)
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(density(powers))
options(warn=0)
options(warn=-1)
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(powers)
options(warn=0)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
load("natality-california-2022.rda")
head(df)
df_summary <- df %>% group_by(County) %>% summarise(
Total_Births = sum(Births),
Female_Births = sum(ifelse(Gender == "Female", Births, 0)),
Male_Births = sum(ifelse(Gender == "Male", Births, 0))
)
df_summary <- df_summary %>% select(!Total_Births)
df_summary
ggplot(
df_summary,
aes(
x=County,
y=Female_Births/(Female_Births + Male_Births),
fill=County
)
) + geom_bar(
stat="identity"
) + labs(
x="County", y="Percentage of Female Births (%)", title="Percentage of Female Births by County"
) + theme_minimal() + theme(
axis.text.x = element_text(angle=90, hjust=1),
legend.text = element_text(size=4)
)
chisq.test(df_summary %>% subset(select=c(Female_Births, Male_Births)))
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
options(warn=-1)
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(x=t, y=powers)
load("school-improvement.rda")
head(d)
model_summary <- d %>% group_by(State) %>% summarize(
transformation_count = length(which(Model.Selected == "Transformation")),
restart_count = length(which(Model.Selected == "Restart")),
turnaround_count = length(which(Model.Selected == "Turnaround")),
closure_count = length(which(Model.Selected == "Closure"))
)
head(model_summary)
ggplot(model_summary %>% gather(value, variable, -State), aes(x=State, y=variable, fill=value)) +
geom_bar(stat="identity") +
labs(
x="State",
y="Count",
title="Count of Model by State"
) + theme_minimal() + theme(
axis.text.x = element_text(size=5, angle=45, hjust=1)
)
chisq.test(model_summary %>% subset(select=c(closure_count, restart_count, transformation_count, turnaround_count)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
options(warn=-1)
load("natality-california-2022.rda")
head(df)
df_summary <- df %>% group_by(County) %>% summarise(
Total_Births = sum(Births),
Female_Births = sum(ifelse(Gender == "Female", Births, 0)),
Male_Births = sum(ifelse(Gender == "Male", Births, 0))
)
df_summary <- df_summary %>% select(!Total_Births)
df_summary
ggplot(
df_summary,
aes(
x=County,
y=Female_Births/(Female_Births + Male_Births),
fill=County
)
) + geom_bar(
stat="identity"
) + labs(
x="County", y="Percentage of Female Births (%)", title="Percentage of Female Births by County"
) + theme_minimal() + theme(
axis.text.x = element_text(angle=90, hjust=1),
legend.text = element_text(size=4)
)
chisq.test(df_summary %>% subset(select=c(Female_Births, Male_Births)))
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(x=t, y=powers)
load("school-improvement.rda")
head(d)
model_summary <- d %>% group_by(State) %>% summarize(
transformation_count = length(which(Model.Selected == "Transformation")),
restart_count = length(which(Model.Selected == "Restart")),
turnaround_count = length(which(Model.Selected == "Turnaround")),
closure_count = length(which(Model.Selected == "Closure"))
)
head(model_summary)
ggplot(model_summary %>% gather(value, variable, -State), aes(x=State, y=variable, fill=value)) +
geom_bar(stat="identity") +
labs(
x="State",
y="Count",
title="Count of Model by State"
) + theme_minimal() + theme(
axis.text.x = element_text(size=5, angle=45, hjust=1)
)
chisq.test(model_summary %>% subset(select=c(closure_count, restart_count, transformation_count, turnaround_count)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
options(warn=-1)
load("natality-california-2022.rda")
head(df)
df_summary <- df %>% group_by(County) %>% summarise(
Total_Births = sum(Births),
Female_Births = sum(ifelse(Gender == "Female", Births, 0)),
Male_Births = sum(ifelse(Gender == "Male", Births, 0))
)
df_summary <- df_summary %>% select(!Total_Births)
df_summary
ggplot(
df_summary,
aes(
x=County,
y=Female_Births/(Female_Births + Male_Births),
fill=County
)
) + geom_bar(
stat="identity"
) + labs(
x="County", y="Percentage of Female Births (%)", title="Percentage of Female Births by County"
) + theme_minimal() + theme(
axis.text.x = element_text(angle=90, hjust=1),
legend.text = element_text(size=4)
)
chisq.test(df_summary %>% subset(select=c(Female_Births, Male_Births)))
chisq.power <- function(k, t, n, B = 2000){
R = vector(length=B)
for (i in 1:B){
alpha = 0.05
two_k = 2*k
pt_data = c(rep(1/two_k + t, k), rep(1/two_k - t, k))
obs = sample(pt_data, n, replace=TRUE)
exp = sample(1:two_k, n, replace=TRUE)
X = chisq.test(obs, exp)
R[i] = as.integer(X$p.value <= alpha)
}
return(mean(R))
}
k = 6
t = seq(0.01, 1/(2*k), 1/(2*k)/10)
powers <- vector(length=length(t))
for (i in 1:length(t)){
powers[i] = chisq.power(k, t[i], 100)
}
plot(x=t, y=powers)
load("school-improvement.rda")
head(d)
model_summary <- d %>% group_by(State) %>% summarize(
transformation_count = length(which(Model.Selected == "Transformation")),
restart_count = length(which(Model.Selected == "Restart")),
turnaround_count = length(which(Model.Selected == "Turnaround")),
closure_count = length(which(Model.Selected == "Closure"))
)
head(model_summary)
ggplot(model_summary %>% gather(value, variable, -State), aes(x=State, y=variable, fill=value)) +
geom_bar(stat="identity") +
labs(
x="State",
y="Count",
title="Count of Model by State"
) + theme_minimal() + theme(
axis.text.x = element_text(size=5, angle=45, hjust=1)
)
chisq.test(model_summary %>% subset(select=c(closure_count, restart_count, transformation_count, turnaround_count)))
ggplot(model_summary %>% gather(value, variable, -State), aes(x=State, y=variable, fill=value)) +
geom_bar(stat="identity") +
labs(
x="State",
y="Count",
title="Count of Model by State"
) + theme_minimal() + theme(
axis.text.x = element_text(size=5, angle=45, hjust=1)
)
chisq.test(model_summary %>% subset(select=c(closure_count, restart_count, transformation_count, turnaround_count)))
render("hw-1.Rmd")
markdown::render("hw-1.Rmd")
library(rmarkdown)
render("hw-1.Rmd")
render("hw-1.Rmd")
render("hw-1.Rmd")
library(markdown)
library(rmarkdown)
render("hw-1.Rmd")
rm(list = ls())
